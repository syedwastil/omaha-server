# Generated by Django 5.1.2 on 2024-10-28 07:38

import django.core.files.storage
import django.db.models.deletion
import django.utils.timezone
import django_extensions.db.fields
import jsonfield.fields
import omaha.fields
import omaha.models
import versionfield.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('id', models.CharField(max_length=38, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='App')),
            ],
            options={
                'db_table': 'applications',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(db_index=True, max_length=10, unique=True, verbose_name='Channel')),
            ],
            options={
                'db_table': 'channels',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eventtype', models.PositiveSmallIntegerField(db_index=True)),
                ('eventresult', models.PositiveSmallIntegerField()),
                ('errorcode', models.IntegerField(blank=True, null=True)),
                ('extracode1', models.IntegerField(blank=True, null=True)),
                ('download_time_ms', models.PositiveIntegerField(blank=True, null=True)),
                ('downloaded', models.PositiveIntegerField(blank=True, null=True)),
                ('total', models.PositiveIntegerField(blank=True, null=True)),
                ('update_check_time_ms', models.PositiveIntegerField(blank=True, null=True)),
                ('install_time_ms', models.PositiveIntegerField(blank=True, null=True)),
                ('source_url_index', models.URLField(blank=True, null=True)),
                ('state_cancelled', models.PositiveIntegerField(blank=True, null=True)),
                ('time_since_update_available_ms', models.PositiveIntegerField(blank=True, null=True)),
                ('time_since_download_start_ms', models.PositiveIntegerField(blank=True, null=True)),
                ('nextversion', models.CharField(blank=True, max_length=40, null=True)),
                ('previousversion', models.CharField(blank=True, max_length=40, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Hw',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sse', models.PositiveIntegerField(blank=True, null=True)),
                ('sse2', models.PositiveIntegerField(blank=True, null=True)),
                ('sse3', models.PositiveIntegerField(blank=True, null=True)),
                ('ssse3', models.PositiveIntegerField(blank=True, null=True)),
                ('sse41', models.PositiveIntegerField(blank=True, null=True)),
                ('sse42', models.PositiveIntegerField(blank=True, null=True)),
                ('avx', models.PositiveIntegerField(blank=True, null=True)),
                ('physmemory', models.PositiveIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(db_index=True, max_length=10, unique=True, verbose_name='Platform')),
                ('verbose_name', models.CharField(blank=True, max_length=20)),
            ],
            options={
                'db_table': 'platforms',
            },
        ),
        migrations.CreateModel(
            name='Data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.PositiveSmallIntegerField(choices=[(0, 'install'), (1, 'untrusted')])),
                ('index', models.CharField(blank=True, max_length=255, null=True)),
                ('value', models.TextField(blank=True, null=True)),
                ('app', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='omaha.application')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Os',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(blank=True, max_length=10, null=True)),
                ('version', models.CharField(blank=True, max_length=16, null=True)),
                ('sp', models.CharField(blank=True, max_length=40, null=True)),
                ('arch', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'unique_together': {('platform', 'version', 'sp', 'arch')},
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', versionfield.fields.VersionField(help_text='Format: 255.255.65535.65535')),
                ('ismachine', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('sessionid', models.CharField(blank=True, max_length=40, null=True)),
                ('userid', models.CharField(blank=True, max_length=40, null=True)),
                ('installsource', models.CharField(blank=True, max_length=40, null=True)),
                ('originurl', models.URLField(blank=True, null=True)),
                ('testsource', models.CharField(blank=True, max_length=40, null=True)),
                ('updaterchannel', models.CharField(blank=True, max_length=10, null=True)),
                ('created', models.DateTimeField(blank=True, db_index=True, default=django.utils.timezone.now, editable=False)),
                ('ip', models.GenericIPAddressField(blank=True, null=True, protocol='IPv4')),
                ('hw', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omaha.hw')),
                ('os', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omaha.os')),
            ],
        ),
        migrations.CreateModel(
            name='AppRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appid', models.CharField(db_index=True, max_length=38)),
                ('version', versionfield.fields.VersionField(blank=True, default=0, help_text='Format: 255.255.65535.65535', null=True)),
                ('nextversion', versionfield.fields.VersionField(blank=True, default=0, help_text='Format: 255.255.65535.65535', null=True)),
                ('lang', models.CharField(blank=True, max_length=40, null=True)),
                ('tag', models.CharField(blank=True, max_length=40, null=True)),
                ('installage', models.SmallIntegerField(blank=True, null=True)),
                ('events', models.ManyToManyField(to='omaha.event')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='omaha.request')),
            ],
        ),
        migrations.CreateModel(
            name='Version',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('is_enabled', models.BooleanField(default=True)),
                ('is_critical', models.BooleanField(default=False)),
                ('version', versionfield.fields.VersionField(db_index=True, help_text='Format: 255.255.65535.65535')),
                ('release_notes', models.TextField(blank=True, null=True)),
                ('file', models.FileField(null=True, storage=django.core.files.storage.FileSystemStorage(), upload_to=omaha.models._version_upload_to)),
                ('file_hash', models.CharField(blank=True, max_length=140, null=True, verbose_name='Hash')),
                ('file_size', models.PositiveIntegerField(blank=True, null=True)),
                ('app', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='omaha.application')),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='omaha.channel')),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='omaha.platform')),
            ],
            options={
                'db_table': 'versions',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='PartialUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enabled', models.BooleanField(db_index=True, default=True)),
                ('percent', omaha.fields.PercentField()),
                ('start_date', models.DateField(db_index=True)),
                ('end_date', models.DateField(db_index=True)),
                ('exclude_new_users', models.BooleanField(default=True)),
                ('active_users', models.PositiveSmallIntegerField(choices=[(0, 'all'), (1, 'week'), (2, 'month')], default=1, help_text='Active users in the past ...')),
                ('version', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='omaha.version')),
            ],
        ),
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('event', models.PositiveSmallIntegerField(choices=[(0, 'preinstall'), (1, 'install'), (2, 'postinstall'), (3, 'update')], help_text='Contains a fixed string denoting when this action should be run.')),
                ('run', models.CharField(blank=True, help_text='The name of an installer binary to run.', max_length=255, null=True)),
                ('arguments', models.CharField(blank=True, help_text='Arguments to be passed to that installer binary.', max_length=255, null=True)),
                ('successurl', models.URLField(blank=True, help_text="A URL to be opened using the system's default web browser on a successful install.", null=True)),
                ('terminateallbrowsers', models.BooleanField(default=False, help_text='If "true", close all browser windows before starting the installer binary.')),
                ('onsuccess', models.CharField(blank=True, help_text='Contains a fixed string denoting some action to take in response to a successful install', max_length=255, null=True)),
                ('other', jsonfield.fields.JSONField(blank=True, help_text='JSON format', null=True, verbose_name='Other attributes')),
                ('version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='omaha.version')),
            ],
            options={
                'db_table': 'actions',
                'ordering': ['id'],
            },
        ),
        migrations.AddIndex(
            model_name='version',
            index=models.Index(fields=['app', 'platform', 'channel', 'version'], name='versions_app_id_6b57f6_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='version',
            unique_together={('app', 'platform', 'channel', 'version')},
        ),
    ]
